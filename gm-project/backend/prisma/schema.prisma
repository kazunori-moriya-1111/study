// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task{
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  dueDate String @db.VarChar(10)
  status Status @default(NOT_STARTED)
  description String?
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
}

enum Status {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

model Racer{
  registrationNumber Int @id @unique
  name String @db.VarChar(20)
  nameKana String @db.VarChar(20)
  birthday DateTime @db.Date 
  height Int
  weight Int
  bloodType String @db.VarChar(2)
  branch String @db.VarChar(4)
  birthPlace String @db.VarChar(4)
  registrationPeriod Int
  racerGrade RacerGrade
  createdAt DateTime @default(now()) @db.Timestamp(0) 
  updatedAt DateTime @updatedAt @db.Timestamp(0)
}

enum RacerGrade {
  A1
  A2
  B1
  B2
}

// 失格フラグ
enum DisqualificationFlag {
  // フライング
  Flying
  // 出遅れ
  LateStart
  // 転覆
  Subversion
  // 落水
  FallingWater
  // エンスト
  EngineStop
  // 沈没
  Sinking
  // 不完走
  IncompleteRun
  // 妨害
  Obstruction
  // 周回誤認
  CircularMisidentification
  // 救助作業妨害
  ObstructingRescueWork
  // 緊急避譲義務違反
  ViolationOfEmergencyEvacuationObligation
  // 航路指示灯違反
  ViolationOfNavigationalLights
  // 危険な転舵
  DangerousSteering
}

model Result{
  fieldName String @db.VarChar(4)
  fieldNo Int
  raceGrade RaceGrade
  yyyymmdd DateTime @db.Date
  //開催日
  raceEventDate String  @db.VarChar(4)
  raceNo Int
  raceSeries String  @db.VarChar(10)
  //例）第２６回チャレンジカップ／Ｇ２レディースＣＣ
  raceTitle String
  //例）予選 1800m 安定版使用
  raceLabel String
  // 1着
  firstPlace Int?
  firstRacerRegistrationNumber Int?
  firstRacerName String?
  firstRacerDisqualification DisqualificationFlag?
  // 2着
  secondPlace Int?
  secondRacerRegistrationNumber Int?
  secondRacerName String?
  secondRacerDisqualification DisqualificationFlag?
  // 3着
  thirdPlace Int?
  thirdRacerRegistrationNumber Int?
  thirdRacerName String?
  thirdRacerDisqualification DisqualificationFlag?
  // 4着
  fourthPlace Int?
  fourthRacerRegistrationNumber Int?
  fourthRacerName String?
  fourthRacerDisqualification DisqualificationFlag?
  // 5着
  fifthPlace Int?
  fifthRacerRegistrationNumber Int?
  fifthRacerName String?
  fifthRacerDisqualification DisqualificationFlag?
  // 6着
  sixthPlace Int?
  sixthRacerRegistrationNumber Int?
  sixthRacerName String?
  sixthRacerDisqualification DisqualificationFlag?
  // 1コース
  startFirstCourse Int?
  startTimingFirstCourse String?
  // 2コース
  startSecondCourse Int?
  startTimingSecondCourse String?
  // 3コース
  startThirdCourse Int?
  startTimingThirdCourse String?
  // 4コース
  startFourthCourse Int?
  startTimingFourthCourse String?
  // 5コース
  startFifthCourse Int?
  startTimingFifthCourse String?
  // 6コース
  startSixthCourse Int?
  startTimingSixthCourse String?
  // 結果
  sanrentanPrice Int?
  sanrentanPopular Int?
  sanrenpukuPrice Int?
  sanrenpukuPopular Int?
  nirentanPrice Int?
  nirentanPopular Int?
  nirenpukuPrice Int?
  nirenpukuPopular Int?
  // 水面気象
  temperature Float?
  weather String?
  wind Int?
  windDirection String?
  waterTemperature Float?
  wave Int?
  url String? @db.VarChar(100)
  // 備考
  return_boat String?
  decision String?
  createdAt DateTime @default(now()) @db.Timestamp(0) 
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  @@unique(fields:[yyyymmdd, fieldName, raceNo], name : "result_identifier")
}

enum RaceGrade {
  SG
  G1
  G2
  G3
  NORMAL
}
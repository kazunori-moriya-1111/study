# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Task {
  id: Int!
  name: String!
  dueDate: String!
  status: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Racer {
  registrationNumber: Int!
  name: String!
  nameKana: String!
  birthday: Date!
  height: Int!
  weight: Int!
  bloodType: String!
  branch: String!
  birthPlace: String!
  registrationPeriod: Int!
  racerGrade: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Result {
  fieldName: String!
  fieldNo: Int!
  raceGrade: String!
  yyyymmdd: Date!
  raceEventDate: String!
  raceNo: Int!
  raceSeries: String!
  raceTitle: String!
  raceLabel: String!
  firstPlace: Int
  firstRacerRegistrationNumber: Int
  firstRacerName: String
  firstRacerDisqualification: String
  secondPlace: Int
  secondRacerRegistrationNumber: Int
  secondRacerName: String
  thirdPlace: Int
  thirdRacerRegistrationNumber: Int
  thirdRacerName: String
  fourthPlace: Int
  fourthRacerRegistrationNumber: Int
  fourthRacerName: String
  fifthPlace: Int
  fifthRacerRegistrationNumber: Int
  fifthRacerName: String
  sixthPlace: Int
  sixthRacerRegistrationNumber: Int
  sixthRacerName: String
  startFirstCourse: Int
  startTimingFirstCourse: String
  startSecondCourse: Int
  startTimingSecondCourse: String
  startThirdCourse: Int
  startTimingThirdCourse: String
  startFourthCourse: Int
  startTimingFourthCourse: String
  startFifthCourse: Int
  startTimingFifthCourse: String
  startSixthCourse: Int
  startTimingSixthCourse: String
  sanrentanPrice: Int
  sanrentanPopular: Int
  sanrenpukuPrice: Int
  sanrenpukuPopular: Int
  nirentanPrice: Int
  nirentanPopular: Int
  nirenpukuPrice: Int
  nirenpukuPopular: Int
  temperature: Float
  weather: String
  wind: Int
  windDirection: String
  waterTemperature: Float
  wave: Int
  url: String
  return_boat: String
  decision: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  getTasks: [Task]!
  getRacers: [Racer]!
  getResult: [Result]!
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput!): Task!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
  deleteTask(id: Int!): Task!
  insertRacer(registrationNumber: Int!): Racer!
  insertResult(raceNo: Int!, fieldName: String!, yyyymmdd: String!): Result!
}

input CreateTaskInput {
  name: String!
  dueDate: String!
  description: String
}

input UpdateTaskInput {
  id: Int!
  name: String
  dueDate: String
  status: String
  description: String
}